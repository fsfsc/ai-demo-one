#include "认识系统常识函数库.h"



void 是什么() {
	map<string, string> 是什么dict;
	是什么dict["等于"] = "=";
	是什么dict["等于几"] = "=";
	是什么dict["不等于"] = "!=";
	是什么dict["大于"] = ">";
	是什么dict["小于"] = "<";
	是什么dict["整型"] = "int";
	是什么dict["字符串"] = "string";
	是什么dict["零"] = "0";
	是什么dict["加"] = "+";
	是什么dict["减"] = "-";
	是什么dict["乘"] = "*";
	是什么dict["除"] = "/";
	是什么dict["整数"] = "函数头:整数()";
	是什么dict["正整数"] = "函数头:正整数";
	是什么dict["浮点型"] = "fload";
	是什么dict["一"] = "1";
	是什么dict["点"] = ".";
	是什么dict["数字"] = "1234567890的自由组合 ";
	是什么dict["妈妈"] = "制造你的人，由性别决定，性别为女，则为妈妈";
	是什么dict["爸爸"] = "制造你的人，由性别决定，性别为男，则为爸爸";
	是什么dict["时间"] = "系统函数:time()";
	是什么dict["一加一等于几"] = "1+1=";
	是什么dict["二"] = "2";
	是什么dict["三"] = "3";
	是什么dict["四"] = "4";
	是什么dict["五"] = "5";
	是什么dict["六"] = "6";
	是什么dict["七"] = "7";
	是什么dict["八"] = "8";
	是什么dict["九"] = "9";
 
	ofstream file("写入系统认识文本数据.txt"); // 打开一个文件进行写入操作
	if (file.is_open()) { // 如果文件成功打开
		for (const auto& pair : 是什么dict) { // 遍历字典中的所有元素
			file << pair.first << " " << pair.second << endl; // 将键值对写入文件中
		}
		file.close(); // 关闭文件
		cout << "写入系统认识文本数据初始化成功" << endl;
	}
	else {
		std::cerr << "写入系统认识文本数据失败" << endl;
	}

}
map<string, string> 已经存的数据;
void  读取数据() {
	ifstream  ifs;
	string str1;
	string str2;
	string str3="ces";
	ifs.open("写入系统认识文本数据.txt", ios::in);
	
	if (ifs.is_open()) {
	
		while(ifs>>str1>>str2) {
			
			已经存的数据[str1] = str2;
			
			
		}
	}
	ifs.close();
		
	}

	//void 用汉语怎么表达() {

	//}

	//ai的想法
	//ai的思路是使用函数验证已经知道的特征对应的东西，然后进行下一步操作。
	//这种方式本来应该是人来思考的。
	//如果把这些的基本特征告知给ai,则ai 可以用函数的方式来写写一步操作。
	void 当听到这些语言时() {
		/*参数里，语言中包括的特征节点进行参数化提取出来，然后在MAP中查寻到对应的东西，再根据已经有的知识进行下一步的操作*/
		string str = "一加一等于几";
		//是什么dict[x]是什么dict[加]是什么dict[y]

			读取数据();
		string 读取字符串1 = 已经存的数据["一"];
		string 读取字符串2 = 已经存的数据["加"];
		string 读取字符串3 = 已经存的数据["一"];
		//string 读取字符串4 = 已经存的数据["等于几"];
		//string 读取字符串4 = "";
		cout << "读取字符串1-->" << 读取字符串1 << endl;
		cout <<  "读取字符串2-->" << 读取字符串2 << endl;
		cout <<  "读取字符串3-->" << 读取字符串3 << endl;
		//cout << "读取字符串4-->" << 读取字符串4 << endl;
		/*/for (const auto& pair : 已经存的数据) {
			cout << pair.first << "-->" << pair.second << endl;
		}+*/
		
		if(str!=""&& 读取字符串1!=""&& 读取字符串2 !=""&& 读取字符串3!="") {
			/*比如说自然语言是 一加一等于多少，则ai会调用1+1=?,当然我们也可以把这个实例化的函数写出来，然后当函数听到1+1或者2+2之类的内容时，会直接调用这个函数，为什么会调用这个函数呢，因为形式基本相同，他可以调用对比特征函数，进行同类型的对比，如果对比的结果是属于同类的，则可以调用一些同类的函数，因为这些函数本来就是这些类的通用函数，就比如人类都会吃饭喝水拉屎尿尿谈恋爱。那么这些类会有很多的函数，到底调用哪个函数?这个需要AI去测试或者从已经有的经验中来得知。*/
			int strint;
			str = 读取字符串1 + 读取字符串2 + 读取字符串3;
			cout << str << endl;;
			cout <<stoi(str); 
			strint = 1 + 1;
			 
			

			//测试失败，因为最简单数学运算+加号不知道是什么数据类型。这就导致了，用字符串会拼接出来11结果。
			//而我希望的是1+1的数学运算。
			//直接stoi 会得到一个1 ，也不是结果2
			//就感觉很怪，回头再想想

			//应该是字符串和char的问题
			//解决办法是 将所有的char的int 加减乘除都进行重写
			//或者 将strng 的类型进行判断  如果可以转成char类型的 先转成char
			//然后再转成int类型
			//这样就可以把自然语言转成了计算机的语言了
		}
		else {
			cout << "需要从map中查下特征" << endl;
		}

	}

	void 方法(string 环境, string  身体模型, string 方法逻辑) {
		//三个参数
		//1，环境（场景）
		//2，身体（谁）
		//3，方法（怎么实现）

		//环境（包括使用场景）
		//身体模型（手，脚，头，口，眼，耳，嘴，鼻，脑，心，肝，脾，胃，肾，肺，胰脏，肾上腺素，血液，免疫细胞，身体模型）
		//方法（实现方式，逻辑，步骤，节点，方法集合，顺序集合）

		
}

