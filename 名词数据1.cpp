#include "词典.h"
//名词相关的基础数据简单存储准备
void 名词数据1初始化() {
    
    map<int, string>名词数据1dict;
    名词数据1dict[1] = "人";
    名词数据1dict[2] = "外貌";
    名词数据1dict[3] = "健康";
    名词数据1dict[4] = "家庭";
    名词数据1dict[5] = "服务";
    名词数据1dict[6] = "购物";
    名词数据1dict[7] = "食物";
    名词数据1dict[8] = "外食";
    名词数据1dict[9] = "学习";
    名词数据1dict[10] = "工作";
    名词数据1dict[11] = "交通";
    名词数据1dict[12] = "体育运动";
    名词数据1dict[13] = "娱乐";
    名词数据1dict[14] = "环境";
    名词数据1dict[15] = "参考文件";



    ofstream file("名词数据1.txt"); // 打开一个文件进行写入操作
    if (file.is_open()) { // 如果文件成功打开
        for (const auto& pair : 名词数据1dict) { // 遍历字典中的所有元素
            file << pair.first << " " << pair.second << endl; // 将键值对写入文件中
        }
        file.close(); // 关闭文件
        cout << "名词数据1初始化成功" << endl;
    }
    else {
        std::cerr << "名词数据1初始化失败" << endl;
    }
}

void 人名词数据1初始化(){
    map<int, string>人名词数据1dict;
    人名词数据1dict[1]="身体";
    人名词数据1dict[2] = "手";
    人名词数据1dict[3] = "脚丫子";
    人名词数据1dict[4] = "肌肉";
    人名词数据1dict[5] = "骨架";
    人名词数据1dict[6] = "内部器官";
    人名词数据1dict[7] = "家庭";
    人名词数据1dict[8] = "关系";


    ofstream file("人名词数据1.txt"); // 打开一个文件进行写入操作
    if (file.is_open()) { // 如果文件成功打开
        for (const auto& pair : 人名词数据1dict) { // 遍历字典中的所有元素
            file << pair.first << " " << pair.second << endl; // 将键值对写入文件中
        }
        file.close(); // 关闭文件
        cout << "人名词数据1初始化成功" << endl;
    }
    else {
        std::cerr << "人名词数据1初始化失败" << endl;
    }
}


void  身体名词数据1初始化() {
    map<int, string>身体名词数据1dict;
    身体名词数据1dict[1] = "胸";
    身体名词数据1dict[2] = "大腿";
    身体名词数据1dict[3] = "胳膊肘子";
    身体名词数据1dict[4] = "手腕子";
    身体名词数据1dict[5] = "手";
    身体名词数据1dict[6] = "脖子";
    身体名词数据1dict[7] = "肚子";
    身体名词数据1dict[8] = "臀部";
    身体名词数据1dict[9] = "外小腿";
    身体名词数据1dict[10] = "男人";
    身体名词数据1dict[11] = "头";
    身体名词数据1dict[12] = "腰部";
    身体名词数据1dict[13] = "肚脐";
    身体名词数据1dict[14] = "前臂";
    身体名词数据1dict[15] = "膝盖";
    身体名词数据1dict[16] = "腿";
    身体名词数据1dict[17] = "脚掌";
    身体名词数据1dict[18] = "女人";
    身体名词数据1dict[19] = "颈背";
    身体名词数据1dict[20] = "肩膀";
    身体名词数据1dict[21] = "胳膊";
    身体名词数据1dict[22] = "脚脖子";
    身体名词数据1dict[23] = "背";
    身体名词数据1dict[24] = "腋窝";
    身体名词数据1dict[25] = "后腰";
    身体名词数据1dict[26] = "屁股";
    身体名词数据1dict[27] = "小腿";
    身体名词数据1dict[28] = "脚跟";


    ofstream file("身体名词数据1.txt"); // 打开一个文件进行写入操作
    if (file.is_open()) { // 如果文件成功打开
        for (const auto& pair : 身体名词数据1dict) { // 遍历字典中的所有元素
            file << pair.first << " " << pair.second << endl; // 将键值对写入文件中
        }
        file.close(); // 关闭文件
        cout << "身体名词数据1初始化成功" << endl;
    }
    else {
        std::cerr << "身体名词数据1初始化失败" << endl;
    }

}

void  手名词数据1初始化() {
    map<int, string>手名词数据1dict;
    
    手名词数据1dict[1] = "无名指";
    手名词数据1dict[2] = "小指";
    手名词数据1dict[3] = "手腕";
    手名词数据1dict[4] = "中指";
    手名词数据1dict[5] = "食指";
    手名词数据1dict[6] = "手掌";
    手名词数据1dict[7] = "大拇指";
    手名词数据1dict[8] = "指甲";
    手名词数据1dict[9] = "手指关节";
    手名词数据1dict[10] = "拳头";
  


    ofstream file("手名词数据1.txt"); // 打开一个文件进行写入操作
    if (file.is_open()) { // 如果文件成功打开
        for (const auto& pair : 手名词数据1dict) { // 遍历字典中的所有元素
            file << pair.first << " " << pair.second << endl; // 将键值对写入文件中
        }
        file.close(); // 关闭文件
        cout << "手名词数据1初始化成功" << endl;
    }
    else {
        std::cerr << "手名词数据1初始化失败" << endl;
    }

}


void  脚丫子名词数据1初始化() {
    map<int, string>脚丫子名词数据1dict;

    脚丫子名词数据1dict[1] = "大脚趾";
    脚丫子名词数据1dict[2] = "脚趾";
    脚丫子名词数据1dict[3] = "脚板";
    脚丫子名词数据1dict[4] = "脚背";
    脚丫子名词数据1dict[5] = "脚底心";
    脚丫子名词数据1dict[6] = "趾甲";
    脚丫子名词数据1dict[7] = "小趾";
    脚丫子名词数据1dict[8] = "脚踝";

    



    ofstream file("脚丫子名词数据1.txt"); // 打开一个文件进行写入操作
    if (file.is_open()) { // 如果文件成功打开
        for (const auto& pair : 脚丫子名词数据1dict) { // 遍历字典中的所有元素
            file << pair.first << " " << pair.second << endl; // 将键值对写入文件中
        }
        file.close(); // 关闭文件
        cout << "脚丫子名词数据1初始化成功" << endl;
    }
    else {
        std::cerr << "脚丫子名词数据1初始化失败" << endl;
    }

}


void  肌肉名词数据1初始化() {
    map<int, string>肌肉名词数据1dict;

    肌肉名词数据1dict[1] = "额骨";
    肌肉名词数据1dict[2] = "肋间肌";
    肌肉名词数据1dict[3] = "肱二头肌";
    肌肉名词数据1dict[4] = "腹直肌";
    肌肉名词数据1dict[5] = "四头肌";
    肌肉名词数据1dict[6] = "胸肌";
    肌肉名词数据1dict[7] = "三角肌";
    肌肉名词数据1dict[8] = "腿筋";
    肌肉名词数据1dict[9] = "斜方肌";
    肌肉名词数据1dict[10] = "背阔肌";
    肌肉名词数据1dict[11] = "肱三头肌";

    





    ofstream file("肌肉名词数据1.txt"); // 打开一个文件进行写入操作
    if (file.is_open()) { // 如果文件成功打开
        for (const auto& pair : 肌肉名词数据1dict) { // 遍历字典中的所有元素
            file << pair.first << " " << pair.second << endl; // 将键值对写入文件中
        }
        file.close(); // 关闭文件
        cout << "肌肉名词数据1初始化成功" << endl;
    }
    else {
        std::cerr << "肌肉名词数据1初始化失败" << endl;
    }

}


void  骨架名词数据1初始化() {
    map<int, string>骨架名词数据1dict;

    骨架名词数据1dict[1] = "胸椎";
    骨架名词数据1dict[2] = "桡骨";
    骨架名词数据1dict[3] = "尾椎骨";
    骨架名词数据1dict[4] = "锁骨";
    骨架名词数据1dict[5] = "肋骨";
    骨架名词数据1dict[6] = "尺骨";
    骨架名词数据1dict[7] = "骨盆";
    骨架名词数据1dict[8] = "护膝";
    骨架名词数据1dict[9] = "腓骨";
    骨架名词数据1dict[10] = "头骨";
    骨架名词数据1dict[11] = "颚骨";
    骨架名词数据1dict[12] = "肱骨";
    骨架名词数据1dict[13] = "掌骨";
    骨架名词数据1dict[14] = "股骨";
    骨架名词数据1dict[15] = "颈椎";
    骨架名词数据1dict[16] = "腰椎";
    骨架名词数据1dict[17] = "脊椎";
    


    ofstream file("骨架名词数据1.txt"); // 打开一个文件进行写入操作
    if (file.is_open()) { // 如果文件成功打开
        for (const auto& pair : 骨架名词数据1dict) { // 遍历字典中的所有元素
            file << pair.first << " " << pair.second << endl; // 将键值对写入文件中
        }
        file.close(); // 关闭文件
        cout << "骨架名词数据1初始化成功" << endl;
    }
    else {
        std::cerr << "骨架名词数据1初始化失败" << endl;
    }

}


void  内部器官名词数据1初始化() {
    map<int, string>内部器官名词数据1dict;

    内部器官名词数据1dict[1] = "韧带";
    内部器官名词数据1dict[2] = "肾";
    内部器官名词数据1dict[3] = "窦";
    内部器官名词数据1dict[4] = "颚";
    内部器官名词数据1dict[5] = "舌";
    内部器官名词数据1dict[6] = "喉";
    内部器官名词数据1dict[7] = "软骨";
    内部器官名词数据1dict[8] = "骨";
    内部器官名词数据1dict[9] = "筋";
    内部器官名词数据1dict[10] = "肝";
    内部器官名词数据1dict[11] = "十二指肠";
    内部器官名词数据1dict[12] = "胰脏";
    内部器官名词数据1dict[13] = "小肠";
    内部器官名词数据1dict[14] = "大肠";
    内部器官名词数据1dict[15] = "阑尾";
    内部器官名词数据1dict[16] = "甲状腺";
    内部器官名词数据1dict[17] = "气管";
    内部器官名词数据1dict[18] = "肺";
    内部器官名词数据1dict[19] = "心";
    内部器官名词数据1dict[20] = "胃";
    内部器官名词数据1dict[21] = "脾脏";
    内部器官名词数据1dict[22] = "喉结";
    内部器官名词数据1dict[23] = "声带";
    内部器官名词数据1dict[24] = "脑";
    内部器官名词数据1dict[25] = "咽";
    内部器官名词数据1dict[26] = "嗓子";
    内部器官名词数据1dict[27] = "呼吸系统";
    内部器官名词数据1dict[28] = "泌尿系统";
    内部器官名词数据1dict[29] = "消化系统";
    内部器官名词数据1dict[30] = "内分泌系统";
    内部器官名词数据1dict[31] = "静脉";
    内部器官名词数据1dict[32] = "动脉";
    内部器官名词数据1dict[33] = "心血管系统";
    内部器官名词数据1dict[34] = "神经";
    内部器官名词数据1dict[35] = "神经系统";
    内部器官名词数据1dict[36] = "淋巴";
    内部器官名词数据1dict[37] = "生殖系统";
    



    ofstream file("内部器官名词数据1.txt"); // 打开一个文件进行写入操作
    if (file.is_open()) { // 如果文件成功打开
        for (const auto& pair : 内部器官名词数据1dict) { // 遍历字典中的所有元素
            file << pair.first << " " << pair.second << endl; // 将键值对写入文件中
        }
        file.close(); // 关闭文件
        cout << "内部器官名词数据1初始化成功" << endl;
    }
    else {
        std::cerr << "内部器官名词数据1初始化失败" << endl;
    }

}


void  家庭名词数据1初始化() {
    map<int, string>家庭名词数据1dict;

    家庭名词数据1dict[1] = "表哥";
    家庭名词数据1dict[2] = "表弟";
    家庭名词数据1dict[3] = "奶奶";
    家庭名词数据1dict[4] = "爷爷";
    家庭名词数据1dict[5] = "叔叔";
    家庭名词数据1dict[6] = "姑妈";
    家庭名词数据1dict[7] = "爸爸";
    家庭名词数据1dict[8] = "妈妈";
    家庭名词数据1dict[9] = "兄弟";
    家庭名词数据1dict[10] = "姐妹";
    家庭名词数据1dict[11] = "媳妇";
    家庭名词数据1dict[12] = "儿子";
    家庭名词数据1dict[13] = "孙儿";
    家庭名词数据1dict[14] = "孙女";
    家庭名词数据1dict[15] = "妻子";

    家庭名词数据1dict[16] = "丈夫";
    家庭名词数据1dict[17] = "亲戚";
    家庭名词数据1dict[18] = "父母";
    家庭名词数据1dict[19] = "孩子们";
    家庭名词数据1dict[20] = "孙子";
    家庭名词数据1dict[21] = "爷爷奶奶";
    家庭名词数据1dict[22] = "孪生";
    家庭名词数据1dict[23] = "婆婆";
    家庭名词数据1dict[24] = "公公";

    家庭名词数据1dict[25] = "姐夫";
    家庭名词数据1dict[26] = "大嫂";
    家庭名词数据1dict[27] = "侄女";
    家庭名词数据1dict[28] = "侄子";
    家庭名词数据1dict[29] = "婴儿";
    家庭名词数据1dict[30] = "孩子";
    家庭名词数据1dict[31] = "男孩";
    家庭名词数据1dict[32] = "女孩";
    家庭名词数据1dict[33] = "青少年";
    家庭名词数据1dict[34] = "大人";
    家庭名词数据1dict[35] = "女儿";

   
    ofstream file("家庭名词数据1.txt"); // 打开一个文件进行写入操作
    if (file.is_open()) { // 如果文件成功打开
        for (const auto& pair : 家庭名词数据1dict) { // 遍历字典中的所有元素
            file << pair.first << " " << pair.second << endl; // 将键值对写入文件中
        }
        file.close(); // 关闭文件
        cout << "家庭名词数据1初始化成功" << endl;
    }
    else {
        std::cerr << "家庭名词数据1初始化失败" << endl;
    }

}

void  关系名词数据1初始化() {
    map<int, string>关系名词数据1dict;

    关系名词数据1dict[1] = "管理";
    关系名词数据1dict[2] = "助理";
    关系名词数据1dict[3] = "合作伙伴";
    关系名词数据1dict[4] = "老板";
    关系名词数据1dict[5] = "人员";
    关系名词数据1dict[6] = "同事";
    关系名词数据1dict[7] = "邻居";
    关系名词数据1dict[8] = "朋友";
    关系名词数据1dict[9] = "男朋友";
    关系名词数据1dict[10] = "女朋友";
    关系名词数据1dict[11] = "情侣";
    关系名词数据1dict[12] = "笔友";
    关系名词数据1dict[13] = "闺蜜";
    关系名词数据1dict[14] = "粉丝";
    关系名词数据1dict[15] = "偶像";
    关系名词数据1dict[16] = "同学";

    
    ofstream file("关系名词数据1.txt"); // 打开一个文件进行写入操作
    if (file.is_open()) { // 如果文件成功打开
        for (const auto& pair : 关系名词数据1dict) { // 遍历字典中的所有元素
            file << pair.first << " " << pair.second << endl; // 将键值对写入文件中
        }
        file.close(); // 关闭文件
        cout << "关系名词数据1初始化成功" << endl;
    }
    else {
        std::cerr << "关系名词数据1初始化失败" << endl;
    }

}




void 外貌名词数据1初始化() {
    map<int, string>外貌名词数据1dict;
    外貌名词数据1dict[1] = "服装";
    外貌名词数据1dict[2] = "饰品";
    外貌名词数据1dict[3] = "美女";
    


    ofstream file("外貌名词数据1.txt"); // 打开一个文件进行写入操作
    if (file.is_open()) { // 如果文件成功打开
        for (const auto& pair : 外貌名词数据1dict) { // 遍历字典中的所有元素
            file << pair.first << " " << pair.second << endl; // 将键值对写入文件中
        }
        file.close(); // 关闭文件
        cout << "外貌名词数据1初始化成功" << endl;
    }
    else {
        std::cerr << "外貌名词数据1初始化失败" << endl;
    }
}

void 服装名词数据1初始化() {
    map<int, string>服装名词数据1dict;
    服装名词数据1dict[1] = "连衣裙";
    服装名词数据1dict[2] = "睡衣";
    服装名词数据1dict[3] = "裙子";
    服装名词数据1dict[4] = "雨衣";
    服装名词数据1dict[5] = "浴衣";
    服装名词数据1dict[6] = "长裤";
    服装名词数据1dict[7] = "腰带";
    服装名词数据1dict[8] = "领口";
    服装名词数据1dict[9] = "V字领";
    服装名词数据1dict[10] = "袜子";
    服装名词数据1dict[11] = "睡裙";
    服装名词数据1dict[12] = "吊袜带";
    服装名词数据1dict[13] = "紧身衣";
    服装名词数据1dict[14] = "尿布";
    服装名词数据1dict[15] = "遮阳帽";
    服装名词数据1dict[16] = "围裙";
    服装名词数据1dict[17] = "短裤";
    服装名词数据1dict[18] = "T恤";
    服装名词数据1dict[19] = "凉鞋";
    服装名词数据1dict[20] = "牛仔裤";
    服装名词数据1dict[21] = "背包";
    服装名词数据1dict[22] = "粗呢外套";
    服装名词数据1dict[23] = "围巾";
    服装名词数据1dict[24] = "毛皮大衣";
    服装名词数据1dict[25] = "雨靴";
    服装名词数据1dict[26] = "运动鞋";
    服装名词数据1dict[27] = "拖鞋";
    服装名词数据1dict[28] = "足球制服";
    服装名词数据1dict[29] = "跑步服";
    服装名词数据1dict[30] = "领子";
    服装名词数据1dict[31] = "外衣";
    服装名词数据1dict[32] = "皮鞋";
    服装名词数据1dict[33] = "领带";
    服装名词数据1dict[34] = "袖口";
    服装名词数据1dict[35] = "纽扣";
    服装名词数据1dict[36] = "西服";
    服装名词数据1dict[37] = "口袋";
    服装名词数据1dict[38] = "衬衣";
    服装名词数据1dict[39] = "羊毛衫";
    服装名词数据1dict[40] = "内衣";
    服装名词数据1dict[41] = "休闲外套";
    服装名词数据1dict[42] = "圆领";
    服装名词数据1dict[43] = "风衣";
    服装名词数据1dict[44] = "运动裤";
    服装名词数据1dict[45] = "毛衣";
    服装名词数据1dict[46] = "汗衫";
    服装名词数据1dict[47] = "休闲服";
    服装名词数据1dict[48] = "内裤";
    服装名词数据1dict[49] = "拳击短裤";
    服装名词数据1dict[50] = "袖子";
    服装名词数据1dict[51] = "下摆";
    服装名词数据1dict[52] = "鞋";
    服装名词数据1dict[53] = "连袜裤";
    服装名词数据1dict[54] = "无肩带内衣";
    服装名词数据1dict[55] = "吊带裙";
    服装名词数据1dict[56] = "吊带背心";
    服装名词数据1dict[57] = "紧身胸衣";
    服装名词数据1dict[58] = "长袜";
    服装名词数据1dict[59] = "胸罩";
    服装名词数据1dict[60] = "面纱";
    服装名词数据1dict[61] = "花边";
    服装名词数据1dict[62] = "拖裙";
    服装名词数据1dict[63] = "婚纱礼服";
    服装名词数据1dict[64] = "肩垫";
    服装名词数据1dict[65] = "运动胸罩";
    

    ofstream file("服装名词数据1.txt"); // 打开一个文件进行写入操作
    if (file.is_open()) { // 如果文件成功打开
        for (const auto& pair : 服装名词数据1dict) { // 遍历字典中的所有元素
            file << pair.first << " " << pair.second << endl; // 将键值对写入文件中
        }
        file.close(); // 关闭文件
        cout << "服装名词数据1初始化成功" << endl;
    }
    else {
        std::cerr << "服装名词数据1初始化失败" << endl;
    }
}


void 饰品名词数据1初始化() {
    map<int, string>饰品名词数据1dict;
    饰品名词数据1dict[1] = "垂饰";
    饰品名词数据1dict[2] = "钗";
    饰品名词数据1dict[3] = "手镯";
    饰品名词数据1dict[4] = "耳环";
    饰品名词数据1dict[5] = "手帕";
    饰品名词数据1dict[6] = "戒指";
    饰品名词数据1dict[7] = "项链";
    饰品名词数据1dict[8] = "手表";
    饰品名词数据1dict[9] = "珍珠串";
    饰品名词数据1dict[10] = "单肩包";
    饰品名词数据1dict[11] = "公文包";
    饰品名词数据1dict[12] = "手袋";
    饰品名词数据1dict[13] = "肩带";
    饰品名词数据1dict[14] = "领结";    



    ofstream file("饰品名词数据1.txt"); // 打开一个文件进行写入操作
    if (file.is_open()) { // 如果文件成功打开
        for (const auto& pair : 饰品名词数据1dict) { // 遍历字典中的所有元素
            file << pair.first << " " << pair.second << endl; // 将键值对写入文件中
        }
        file.close(); // 关闭文件
        cout << "饰品名词数据1初始化成功" << endl;
    }
    else {
        std::cerr << "饰品名词数据1初始化失败" << endl;
    }
}

void 美女名词数据1初始化() {
    map<int, string>美女名词数据1dict;
    美女名词数据1dict[1] = "皮肤";
    美女名词数据1dict[2] = "眼影";
    美女名词数据1dict[3] = "睫毛膏";
    美女名词数据1dict[4] = "眼线笔";
    美女名词数据1dict[5] = "颊粉";
    美女名词数据1dict[6] = "粉底霜";
    美女名词数据1dict[7] = "口红";
    美女名词数据1dict[8] = "眉笔";
    美女名词数据1dict[9] = "眉刷";
    美女名词数据1dict[10] = "镊子";
    美女名词数据1dict[11] = "唇蜜";
    美女名词数据1dict[12] = "唇扫";
    美女名词数据1dict[13] = "唇线笔";
    美女名词数据1dict[14] = "彩妆刷";
    美女名词数据1dict[15] = "遮瑕膏";
    美女名词数据1dict[16] = "镜子";
    美女名词数据1dict[17] = "粉黛";
    美女名词数据1dict[18] = "粉扑";
    美女名词数据1dict[19] = "面膜";
    美女名词数据1dict[20] = "指甲刀";
    美女名词数据1dict[21] = "指甲油";
    美女名词数据1dict[22] = "指甲锉刀";
    美女名词数据1dict[23] = "指甲剪刀";
    美女名词数据1dict[24] = "棉花球";
    



    ofstream file("美女名词数据1.txt"); // 打开一个文件进行写入操作
    if (file.is_open()) { // 如果文件成功打开
        for (const auto& pair : 美女名词数据1dict) { // 遍历字典中的所有元素
            file << pair.first << " " << pair.second << endl; // 将键值对写入文件中
        }
        file.close(); // 关闭文件
        cout << "美女名词数据1初始化成功" << endl;
    }
    else {
        std::cerr << "美女名词数据1初始化失败" << endl;
    }
}

