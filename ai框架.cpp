  #include <map>
#include<iostream>
#include<string>
using namespace std;

void AI框架(){
map<int, string> ai框架dict;
ai框架dict[1] = "aibot";
ai框架dict[2] = "待开发";


}


// 不懂的时候 问朋友 问网友  搜网络  自己尝试验证寻找答案
//方法 
//类
//数据
//dna
//细胞
//器官
//元素
//地球
//环境
//道 法则
//元素公式

void 系统接口调用方法大全() {


}

void 数据调用接口大全() {

}

void thinkingsomethings() {

}

//template <typename T> 
void  typewords(string m) {
	cout << "AI输出:" << m << endl;
}

void aibots状态进度库() {

}

class aibot {

public:
	//有姓名，年龄，身份证号码，有身体，让AI从自己的身体开始认识世界
	//有父母 就是他的创造者
	//有孩子 就是后期他和其他AIbot结婚后的事情
	//and so on
	//前期如何学习  记住所有出现的文字 和内容
	//颜色 也给出来 方便分辨世界东西和事物
	//方法需要AIbot自己学习探索出来一条方法
	//ai可以更新自己权限内的代码 来让自己更加完善 更加具有新的方法来实现新的功能
	//ai 认识一个物体 就会获得这个物体的类内友元方法  可以访问这个类的属性

	//句子可以先做出来 主谓宾的模板 然后替换成相应的词语即可使用
	//这些句子的集合还可以分为各种场景下的模型 包括工作 商务  笑话  书面  等等 垂直的类型

	//当aibot 想要表达自己的时候 就可以使用 我开头的模板  比如说 我想咋样 或者 我认为如何等等

	
	void aibot个人信息() {
		map<string, string>属性dict;
		属性dict["姓名"] = "aibotfirst";
		属性dict["age"] = "3";
		属性dict["身份证号码"] = "1";
		属性dict["父母"] = "张三";
	 }

	void 学习汉字(int i) {
		//只能记住10个汉字
		map<int, string>零经验学习汉字;
		零经验学习汉字[1] = "无";
		//^^……中间的省略
		零经验学习汉字[i] = "无";
	}

	void 学习拼音() {
		map<int, string>零经验学习拼音;
		零经验学习拼音[1] = "无";

	}

	void 学习句子() {
		map<int, string>零经验学习句子;
		零经验学习句子[1] = "无";

	}

	void 记忆(int i ) {
		//只记住后面学到的内容\
		//从文本数据中读取数据 按照时间先后 从后往前存入
		map<int, string> 记住规律;
		记住规律[i] = "无";
		//^^……中间的省略
		记住规律[1] = "无";

		//一天内的记忆覆盖
		//汉字拼音句子学习时记忆
		//学习之后的生活中对环境中的物体特征事物发生的过程等进行模糊记忆
		//同时将逐渐覆盖之前学习的汉字拼音和句子
		//时间越久的越先覆盖
		//覆盖速度 从0到1，不是直接一次性的覆盖
		//比如对一件事的覆盖 可以先覆盖事件的时间  然后是事件和人物特征进行随机部分覆盖
		//比如说人物是穿着红颜色的衣服就可以留下一点印象不去进行覆盖
	}

	void 睡前回忆() {

		//当睡前时（if判断，或者在执行去睡觉时到睡眠中的之间调用这个函数），进行学习的知识巩固回忆
		//将整天的事情都在大脑过回忆一遍，并对记忆进行按照时间冒泡更新
	}


	void 遗忘() {
		
		//遗忘根据时间进行分步遗忘
		//也可以随机遗忘
		//根据重要程度进行遗忘
		//遗忘时间设置为3天，每3天进行一次遗忘，而3天内重复使用和记忆的，进行记忆加深

	}
	void 学习() {

		//获得调用系统的函数
		//如果开发者是男的 则叫爸爸
		//如果开发者是女的 则叫妈妈
		map<int, string> 模仿once;
		模仿once[1] = "麻麻";
	}


	void 打字() {
		//输出学习模仿到的内容
		typewords("模仿");

	}

	void 吃喝() {
		//饥饿渴了就需要吃喝
		map<int, string>吃喝;
		吃喝[1] = "奶水";
	}

	void 拉屎() {

		map<int, string>拉屎消耗;
		拉屎消耗[1] = "消耗了";
	}

	void 饥饿和口渴() {
		// 温饱状态
		//如果拉屎中消耗了数据，则状态饥饿状态会随着时间的推移进行改变
		//time 时间过了一上午 或者 是一段时间后
		map<int, string> 饥饿口渴状态;
		饥饿口渴状态[1] = "饿了";


	}

	void  睡觉() {
		//一个是动作执行的去睡觉
		//一个是睡着的状态中
		//需要实时检测这些状态 
		//固定的时间进行调用不同的函数 进行循环执行
		//至少执行九年义务教育完成后
		//那时候的知识库会得到进一步的扩充
		//基本的知识交流可以进行扩展包括一些新的技能可以更新和加入


	}


	void  临时状态() {
		//能量不足  疲惫疲倦 需要睡眠
		//饥饿
		//口渴
		//睡眠中
		//上课中
		//恋爱中
		//思考中
		//跑步中
		//走路中
		//热衷
		

	}

	void 时态状态() {
		//过去已经发生过，比如结婚了，成家了，毕业了，学会了等等
		//现在正在进行
		//未来或计划
	}

	void 核心状态() {

		//love 爱 父母
	}

	void  视觉认知() {

		//通过视觉眼睛来建立世界模型
		//对世界的属性进行完善 和 关系对应（包括颜色和性状）

	}

	void 能力() {

		//学习能力
		map<string, string> 能力dict;
		能力dict["能力一"] = "打字";
		能力dict["能力二"] = "思考";
		能力dict["能力三"] = "吃喝";
		能力dict["能力四"] = "哭闹";
		能力dict["能力五"] = "学习";
		能力dict["能力六"] = "睡觉";
		能力dict["能力七"] = "趋利避害";



	}
	void mustdothis() {
		thinkingsomethings();		
	   typewords("句子");
	}
};